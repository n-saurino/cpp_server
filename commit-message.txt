chore(build): Configure clang-tidy, clang-format, and CMake defaults

Configured clang-tidy for project-wide linting to enforce C++ best practices and maintain code quality. Integrated clang-format to ensure compliance with Google's C++ style guide. Additionally, set a default CMake kit and build configuration to streamline development workflows.

Changes:
- Added clang-tidy for automated linting and C++ best practice enforcement.
- Configured clang-format to align with Google's C++ style guide.
- Set a default CMake kit and build configuration for consistency.

Next steps:
- Implement a performance logging system to track optimization improvements.
- Migrate from char buffers to FIX SBE for a performance comparison.
- Research and apply socket programming optimization techniques.
- Refactor legacy code to align with C++ best practices and style guidelines.

Authored and reviewed by: Nigel Saurino