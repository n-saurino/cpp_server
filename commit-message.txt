refactor(core): Begin refactoring legacy code to align with C++ best practices

Started refactoring legacy code in .cpp files to improve structure, maintainability, and compliance with modern C++ best practices. This is an ongoing effort, and work will continue from the home setup after pushing today's progress.

Changes:
- Began reviewing and refactoring legacy C++ code across multiple .cpp files.
- Improved code structure and adherence to modern C++ guidelines.
- Work in progressâ€”more refinements to follow.

Next steps:
- Continue refactoring and optimizing remaining legacy code.
- Implement a performance logging system to track optimization improvements.
- Migrate from char buffers to FIX SBE for a performance comparison.
- Research and apply socket programming optimization techniques.

Authored and reviewed by: Nigel Saurino